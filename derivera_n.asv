function py = integrera_n(f, a, b, n, varargin)
% Beräknar derivatorna numeriskt
% IN
% f symbolisk funktion i en variabel
% a start för beräkningsintervallet
% b slut för beräkningsintervallet
% n antalet punkter i intervallet
% varargin lägesväljare mellan matlabfunc och symbolisk med vpa
% UT
% py vektor med de numreriskt beräknade derivatorna
    if nargin <= 4
        f = matlabFunction(f);
    end
    intervall = linspace(a,b,n);	% formaterar intervallet
    start_steg = 1/(2^10);          % sätter ett lämpligt startsteg
    numeriskt = @numeriskt_exp4;    % väljer numerisk funktion
    % Beräknar en lämplig steglängd
    %prel_berr = numeriskt(f, intervall, start_steg);
    nytt_steg = start_steg./bis(f, intervall, start_steg);  %justerar steglängd beroende på 2:a derivatan
    ny_berr = numeriskt(f, intervall, nytt_steg);
    if nargin <= 4
        py = double(ny_berr);
    else
        py = vpa(ny_berr);
    end
end
% vildvittror drakar och gråsuggor  © Tobias







